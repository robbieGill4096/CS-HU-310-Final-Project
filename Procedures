CREATE DEFINER=`msandbox`@`localhost` PROCEDURE `CreateItem`(itemCode varchar(10), itemDesc varchar(50), itempri decimal)
BEGIN
	Insert Into Item(ItemCode, ItemDescription, Price)
	Values(itemCode, itemDesc, itempri);
END



CREATE DEFINER=`msandbox`@`localhost` PROCEDURE `CreatePurchase`(itemCode varchar(10), Quan int)
BEGIN
	INSERT INTO Purchase(Quantity, ItemID)
    SELECT Quan as Quantity, Item.ID as ItemID
    FROM Item
    WHERE Item.ItemCode = itemCode;
END


CREATE DEFINER=`msandbox`@`localhost` PROCEDURE `CreateShipment`(item_Code varchar(10), shipment_Quantity int,  shipment_Date Date)
BEGIN
	INSERT INTO Shipment(ItemID, Quantity, ShipmentDate)
    SELECT Item.ID as ItemID, shipment_Quantity as Quantity, shipment_Date as ShipmentDate
    FROM Item
    WHERE Item.ItemCode = item_Code;
END


CREATE DEFINER=`msandbox`@`localhost` PROCEDURE `DeleteItem`(item_Code varchar(10))
BEGIN
DELETE  
from Item
WHERE (Item.ItemCode like item_Code) and Item.ID not IN (select ItemID from Purchase where Purchase.ItemID = Item.ID ) 
and Item.ID not IN (select ItemID from Shipment where Shipment.ItemID = Item.ID );
END


CREATE DEFINER=`msandbox`@`localhost` PROCEDURE `DeletePurchase`(item_Code varchar(10))
BEGIN
DELETE  
from Purchase
where item_Code IN (select ItemCode from Item where Item.ID = Purchase.ItemID)
order by PurchaseDate desc
Limit 1;
END


CREATE DEFINER=`msandbox`@`localhost` PROCEDURE `DeleteShipment`(item_Code varchar(10))
BEGIN
DELETE  
from Shipment
where item_Code IN (select ItemCode from Item where Item.ID = Shipment.ItemID)
order by ShipmentDate desc
Limit 1;
END


CREATE DEFINER=`msandbox`@`localhost` PROCEDURE `GetItems`(item_Code varchar(10))
BEGIN
select * 
from Item
where  Item.ItemCode like item_Code;
END


CREATE DEFINER=`msandbox`@`localhost` PROCEDURE `GetPurchases`(item_Code varchar(10))
BEGIN
select * 
from Purchase
where (select ItemCode from Item where Item.ID = Purchase.ItemID) like item_Code;
END


CREATE DEFINER=`msandbox`@`localhost` PROCEDURE `GetShipments`(item_Code varchar(10))
BEGIN
select * 
from Shipment
where (select ItemCode from Item where Item.ID = Shipment.ItemID) like item_Code;
END


CREATE DEFINER=`msandbox`@`localhost` PROCEDURE `ItemsAvailable`(item_Code varchar(10))
BEGIN
SELECT i.ItemCode, i.ItemDescription, (sum(ItemShip.Quantity) - sum(ItemPurch.Quantity)) as totalQuantity
FROM Item i
LEFT JOIN Purchase ItemPurch ON i.ID = ItemPurch.ItemID  
LEFT JOIN Shipment as ItemShip ON i.ID = ItemShip.ItemID 
where i.ItemCode like item_Code
group by i.ItemCode;
END


CREATE DEFINER=`msandbox`@`localhost` PROCEDURE `UpdateItem`(item_Code varchar(10), item_price int)
BEGIN
UPDATE Item
SET Item.Price = item_price
WHERE Item.ItemCode = item_Code;
END
